(function(){"use strict";let a={hash:a=>(a=61^a^a>>>16,a+=a<<3,a=Math.imul(a,668265261),a^=a>>>15)>>>0,mb32:a=>b=>(a=0|a+1831565813,b=Math.imul(a^a>>>15,1|a),b=b+Math.imul(b^b>>>7,61|b)^b,(b^b>>>14)>>>0)/4294967296,concatenate:(c,d,g)=>{switch(g){case"vertical":{if(c.width!==d.width){const a=Math.max(c.width,d.width);c.width===a?d=e.tile(d,"horizontal")(d.height,a):c=e.tile(c,"horizontal")(c.height,a)}let a={...c.keyed};for(let b=0,e=c.height*c.width;b<d.height;++b)for(let f=0;f<d.width;++f)a[[f,b+c.height]]=d.keyed[[f,b]]+e;return f({keyed:a,height:c.height+d.height,width:c.width})}case"horizontal":{if(c.height!==d.height){const a=Math.max(c.height,d.height);c.height===a?d=e.tile(d,"vertical")(a,d.width):c=e.tile(c,"vertical")(a,c.width)}let a={...c.keyed};for(let b=0,e=c.height*c.width;b<d.height;++b)for(let f=0;f<d.width;++f)a[[f+c.width,b]]=d.keyed[[f,b]]+e;return f({keyed:a,height:c.height,width:c.width+d.width})}}},details:a=>{const{height:b,width:c,keyed:d}=a;let f=Array(c*b),g=[];for(let e=0;e<b;++e)for(let a=0;a<c;++a)f[d[[a,e]]]=[a,e],g.push(d[[a,e]]);let h={...a,points:f,indices:g};return h.concatenate=(a,b)=>e.concatenate(h,a,b),h.map=a=>e.map(h,a),h.forEach=a=>e.forEach(h,a),h.reduce=(a,b)=>e.reduce(h,a,b),h},key:a=>a.reduce((a,b,c)=>(a[b]=c,a),a,{}),pipe:(...a)=>a.reduce((c,a)=>(b,d)=>a(c(b,d))),repeat:(a,b)=>e.pipe(...Array(b||1).fill(a)),rotate:a=>(b,c)=>e.pipe(a,e.swap)(c,b),shuffle:(a,b)=>{const c=a=>e.mb32(e.hash(b+a))(),d=a=>Math.floor(c(a)*(a+1));for(let c=a.length-1,e=d(c);0<c;c--,e=d(c))[a[c],a[e]]=[a[e],a[c]];return a},simplify:a=>{const{height:b,width:c}=a;let d=[],e={};for(let e=0,f=0;e<b;++e)for(let b=0;b<c;++b,++f)d.push(parseInt(a.keyed[[b,e]]));d.sort((c,a)=>c-a);for(let b=0,c=0;b<a.height;++b)for(let f=0;f<a.width;++f,++c)e[[f,b]]=d.indexOf(a.keyed[[f,b]]);return f({...a,keyed:e})},triangleSize:(a,b)=>{let c=0;switch(b){case"isosceles":for(;0<a;)c+=a,a-=2;break;case"right":for(;0<a;)c+=a--;}return c},visualize:a=>{let b=[];for(let c=0,d=[];c<a.height;++c,d=[]){for(let b=0;b<a.width;++b)d.push(`${a.keyed[[b,c]]}`.padStart(2,"0"));b.push(d.join(" "))}return b.join("\n")},map:(a,b)=>a.points.map((c,d)=>b({index:a.indices[d],point:c,x:c[0],y:c[1]},d)),forEach:(a,b)=>a.points.forEach((c,d)=>b({index:a.indices[d],point:c,x:c[0],y:c[1]},d)),reduce:(a,b,c)=>a.points.reduce((c,d,e)=>b(c,{index:a.indices[e],point:d,x:d[0],y:d[1]},e),c),alternate:a=>b=>{let c={...b.keyed};switch(a){case"diagonal":const d=b.height+b.width-1;for(let a=1;a<d;a+=2)for(let d=0,e=a;d<b.width;++d,e=a-d)0<=d&&d<b.width&&0<=e&&e<b.height&&e<b.width&&d<b.height&&(c[[d,e]]=b.keyed[[e,d]]);break;case"horizontal":default:for(let a=1;a<b.height;a+=2)for(let d=0;d<b.width;++d)c[[d,a]]=b.keyed[[b.width-d-1,a]];}return f({...b,keyed:c})},bounce:a=>b=>{let d=b.points.length,e=Math.ceil(d/2),f=[];for(let c=0;c<e;c+=a){for(let e=c;e<c+a&&f.length<d;++e)f.push(b.points[e]);for(let e=d-c-1,g=0;g<a&&f.length<d;--e,++g)f.push(b.points[e])}return c(b,f)},flip:a=>b=>{let c,{height:d,width:e}=b,g={};return"x"===a?c=({x:a,y:b},c)=>g[[e-a-1,b]]=c:"y"===a?c=({x:a,y:b},c)=>g[[a,d-b-1]]=c:"xy"===a?c=({x:a,y:b},c)=>g[[e-a-1,d-b-1]]=c:void 0,b.forEach(c),f({...b,keyed:g})},fold:a=>{let b={},c=0;for(let d=0;d<a.height;d+=2){if(d<a.height-1)for(let e=0;e<a.width;++e)b[[e,d+1]]=a.indices[c++];for(let e=0;e<a.width;++e)b[[e,d]]=a.indices[c++]}return f({...a,keyed:b})},invert:a=>{let b=a.points.length-1,c={};return a.forEach(({point:a},d)=>c[a]=b-d),f({...a,keyed:c})},slice:({left:a,right:b,top:c,bottom:d})=>f=>{a||(a=0),b||(b=f.width),c||(c=0),d||(d=f.height);let g={};for(let e=c;e<d;++e)for(let d=a;d<b;++d)g[[d-a,e-c]]=f.keyed[[d,e]];return e.simplify({...f,keyed:g,height:d-c,width:b-a})},stripe:a=>{let b=[0,Math.ceil(a.height/2)*a.width],c={};for(let d=0;d<a.height;++d)for(let e=0,f=b[d%2]+Math.floor(d/2)*a.width;e<a.width;++e)c[[e,d]]=a.indices[f+e];return f({...a,keyed:c})},mutate:a=>b=>{let c=a(b.height,b.width),d=[];return e.forEach(b,({index:a,point:e})=>d[b.points[a]]=c.keyed[e]),f({...b,keyed:d})},reflect:a=>{let b={};for(let c=0,d=0,e=Math.ceil(a.width/2);c<a.height;++c){for(let f=e-1;0<=f;--f)b[[f,c]]=a.indices[d++];for(let f=a.width-1;f>=e;--f)b[[f,c]]=a.indices[d++]}return f({...a,keyed:b})},reposition:a=>{let b=a.points.length,d=[];for(let c=0;c<b;c+=2)d.push(a.points[c]);for(let c=1;c<b;c+=2)d.push(a.points[c]);return c(a,d)},shift:a=>b=>f({...b,keyed:b.reduce((c,{point:d},e)=>(c[d]=(e+a)%b.points.length,c),{})}),skew:a=>{let b={},c=0;for(let d=0;d<a.height;++d){const e=d%a.width;for(let f=e;f<a.width;++f)b[[f,d]]=a.indices[c++];for(let f=0;f<e;++f)b[[f,d]]=a.indices[c++]}return f({...a,keyed:b})},smooth:(a,b)=>e.repeat(b=>{let c,d={},e=0,g={straight:[[0,-1],[1,0],[0,1],[-1,0]],default:[[-1,-1],[0,-1],[1,-1],[1,0],[1,1],[0,1],[-1,1],[-1,0]],vertical:[[0,-1],[0,1]],horizontal:[[-1,0],[1,0]]}[a||"default"];for(let a of b.points)if(d[a]===void 0){d[a]=e++,c=!1;for(let e of g){const f=[a[0]+e[0],a[1]+e[1]];if(b.keyed[f]&&!d[f]){let d=b.keyed[a]-b.keyed[f];if(1==d){c={gap:d,check_point:f};break}else(!1===c||d<c.gap)&&(c={gap:d,check_point:f})}}c&&(d[c.check_point]=e++)}return f({...b,keyed:d})},b),split:a=>{let b=[],d=Math.ceil(a.width/2);for(let c of[{x:0,to:d},{x:d,to:a.width}])for(let d=0;d<a.height;++d)for(let e=c.x;e<c.to;++e)b.push(a.points[a.keyed[[e,d]]]);return c(a,b)},step:a=>b=>{let c={},d=b.height*b.width,e=d,g={};for(let f=0,h=0;0<e;++h,--e,f=(f+a)%d){for(;g[b.indices[f]];)++f;c[b.points[h]]=b.indices[f],g[b.indices[f]]=!0}return f({...b,keyed:c})},swap:a=>{let b={};for(let[c,d]of a.points)b[[d,c]]=a.keyed[[c,d]];return f({...a,keyed:b,width:a.height,height:a.width})},trade:a=>{let b=[],d=a.points.length;for(let c=0;c<d;c+=2)b.push(a.points[c+1],a.points[c]);return d<a.points.length&&b.push(a.points[d]),c(a,b)},waterfall:a=>{let b={};for(let c,d=0,e=Math.ceil(a.width/2),f=0;d<=e&&(c=a.width-d-1,!(c<d));++d){for(let c=0;c<a.height;++c)b[[d,c]]=a.indices[f++];if(c==d)break;for(let d=0;d<a.height;++d)b[[c,d]]=a.indices[f++]}return f({...a,keyed:b})},seed:a=>(b,d)=>c({height:b,width:d},e.shuffle(e.horizontal(b,d).points,a)),callback:(a,b,c)=>(d,e)=>{let g={},h=c||e*d,i=0,j=0,[k,l,m,n,o,p]=a({height:d,width:e});for(;h--;){let a=g[[l,m]]=i++;"n"===k?--m:"s"===k?++m:"w"===k?--l:"e"===k?++l:"ne"===k?(--m,++l):"nw"===k?(--m,--l):"se"===k?(++m,++l):"sw"===k?(++m,--l):void 0;++j===p&&([k,l,m,n,o,p]=b({direction:k,x:l,y:m,height:d,width:e,base_x:n,base_y:o,index:a}),j=0)}return f({keyed:g,height:d,width:e})},tile:(a,b)=>(c,d)=>{let e,g,h={},i=0,j=0,k=c*d,l=0;for(;k;){for(let b of a.points)e=i+b[0],g=j+b[1],0<=e&&e<d&&0<=g&&g<c&&(h[[e,g]]=l++,--k);switch(b){case"vertical":j+=a.height,j>=c&&(j=0,i+=a.width);break;case"horizontal":default:i+=a.width,i>=d&&(i=0,j+=a.height);}}return f({keyed:h,height:c,width:d})}},e=a,f=e.details,b=e.callback,c=(a,b)=>f({...a,keyed:e.key(b)});e.horizontal=b(({width:a})=>["e",0,0,0,0,a],({base_y:a,width:b})=>["e",0,++a,0,a,b]),e.vertical=e.rotate(e.horizontal),e.double=e.tile(e.horizontal(2,2)),e.snake=e.tile({points:[[0,0],[0,1],[1,1],[1,0]],height:2,width:2}),e.cascade=a=>b(({height:b})=>["s",0,b-a,0,b-a,a],({direction:b,height:c,width:d,x:e,y:f,base_x:g,base_y:h})=>e===d-1||f===c?["s",0>=h?++g:g,Math.max(h-=a,0),g,h,0>h?c%a||a:a]:["s",e+1,f,g,h,a]),e.climb=b(({height:a})=>["s",0,a-1,-2,a-1,1],({direction:a,height:b,width:c,x:d,y:e,base_x:f,base_y:g})=>e<b&&d<c?["s"===a?"e":"s",d,e,f,g,1]:[0>(g-=2)?"e":"s",0>=g?f+2:0,0<g?g:0,0>=g?f+=g||f+2?2:1:f,g,1]),e.corner=a=>"crawl"===a?b(({height:a})=>["n",0,a-1,0,0,a],({direction:a,height:b,width:c,base_x:d,base_y:e})=>"n"===a?["e",++d,e++,d,e,c-d]:"e"===a?["n",d,b-1,d,e,b-e]:void 0):"in"===a?b(({height:a})=>["n",0,a-1,0,0,a],({direction:a,height:b,width:c,base_x:d,base_y:e})=>"n"===a?["w",c-1,e++,d,e,c-d-1]:"w"===a?["n",++d,b-1,d,e,b-e]:void 0):"out"===a?b(({height:a})=>["s",0,0,0,0,a],({direction:a,height:b,width:c,base_x:d,base_y:e})=>"s"===a?["e",++d,e++,d,e,c-d]:"e"===a?["s",d,e,d,e,b-e]:void 0):void 0,e.diagonal=b(({height:a})=>["se",0,a-1,0,a-1,1],({height:a,width:b,base_x:c,base_y:d})=>["se",0<d?c:++c,0<d?--d:0,c,Math.max(d,0),Math.min(a-d,b-c)]),e.diamond=(a,c)=>{const d={height:Math.ceil((c-2)/2),width:Math.ceil((a-2)/2)};let f={height:a+2*d.height,width:c+2*d.width,size:a*c+2*e.triangleSize(a-2,"isosceles")+2*e.triangleSize(c-2,"isosceles")},g=0==f.height%2,h=0==f.width%2,i=Math.floor((f.height-1)/2),j=i;return f={...f,...b(()=>["ne",0,i,0,i,h?j+1:j],({direction:a,height:b,width:c,x:d,y:e,base_x:f,base_y:i,index:k})=>"ne"===a?["se",d,h?e+1:e,f,i,g?j+1:j]:"se"===a?["sw",g?d-1:d,e,f,i,h?j+1:j]:"sw"===a?["nw",d,h?e-1:e,f,i,g?j+1:j]:"nw"===a?!g||1<j?["ne",++f,i,f,i,h?j--:--j]:["s",++f,i,0,0,b]:void 0,f.size)(f.height,f.width)},{...e.slice({top:d.height,bottom:f.height-d.height,left:d.width,right:f.width-d.width})(f),spike:d,diamond:f,height:a,width:c}},e.fan=(a,b)=>{const c=b/2,d=a/2,f=Math.floor(c),g=Math.ceil(c),h=Math.floor(d),i=Math.ceil(d);return e.pipe(e.horizontal,e.flip("xy"))(i,g).concatenate(e.pipe(e.vertical,e.flip("y"))(i,f),"horizontal").concatenate(e.flip("x")(e.pipe(e.horizontal,e.flip("x"))(h,g).concatenate(e.vertical(h,f),"horizontal")),"vertical")},e.pulse=a=>{let c=1;switch(a){case"corner":return b(()=>["w",0,0,0,0,1],({direction:a,x:b,y:d,base_x:e,height:f,width:g})=>"w"===a?e>=g-1?["w",g-1,++e,e,0,g]:["s",++e,0,e,0,c++]:"s"===a?e>=f?["s",++e,0,e,0,f]:["w",b,d,e,0,c]:void 0);case"edge":default:return b(({height:a})=>["s",0,Math.floor(a/2),2,Math.floor(a/2),c],({direction:a,height:b,x:d,y:e,base_x:f,base_y:g,index:h})=>{if(!h&&! --c)return["e",0,--g,f,g,1];return"s"===a?e===b?["s",f++,0,f,0,b]:["w",d,e,f,g,f]:"e"===a?["s",d,e,f,g,c+=2]:"w"===a?0>=g?["s",f,0,++f,0,b]:["e",0,--g,++f,g,f-1]:void 0});}},e.spiral=b(({width:a})=>["e",0,0,0,0,a],({direction:a,height:b,width:c,base_x:d,base_y:e})=>"e"===a?["s",c-d-1,e+1,d,e,b-2*e-1]:"s"===a?["w",c-d-2,b-e-1,d,e,c-2*d-1]:"w"===a?["n",d,b-e-2,d,e,b-2*e-2]:"n"===a?["e",d+1,e+1,++d,++e,c-2*d]:void 0),e.stitch=(()=>{let a;return b(({width:b})=>(a=b+(1-b%2)-2,["se",0,0,0,0,1]),({direction:b,height:c,width:d,x:e,y:f,base_x:g})=>f===c?g===a?["s",d-1,0,g,0,c]:[0==g%2?"sw":"se",++g,0,g,0,1]:["se"===b?"sw":"se",e,f,g,0,1])})(),e.triangle=(a,c)=>{const d={height:Math.ceil((c-2)/2),width:a-1};let f={height:a+d.height,width:c+2*d.width,size:a*c+2*e.triangleSize(a-1,"right")+e.triangleSize(c-2,"isosceles")},g=0==f.width%2,h=f.height;return f={...f,...b(()=>["ne",0,f.height-1,0,0,g?h:--h],({direction:a,height:b,width:c,x:d,y:e,base_x:i,base_y:j,index:k})=>"ne"===a?["se",d,g?e+1:e,i,j,g?h++:++h]:"se"===a?["ne",++i,f.height-1,i,j,h-=2]:void 0,f.size)(f.height,f.width)},{...e.slice({top:d.height,left:d.width,right:f.width-d.width})(f),spike:d,triangle:f,height:a,width:c}},"undefined"==typeof module?window.traverse=a:module.exports={traverse:a}})();